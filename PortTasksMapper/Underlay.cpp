#include "Underlay.h"

const UnderlayColor underlayColors[] = {
	 {0, 0x282820},
	 {1, 0xB7D49A},
	 {2, 0xA99FE0},
	 {3, 0xFC49AA},
	 {4, 0x604040},
	 {5, 0x302020},
	 {6, 0x906830},
	 {7, 0x383830},
	 {8, 0x7A7880},
	 {9, 0x282018},
	 {10, 0x504840},
	 {11, 0x484038},
	 {12, 0x807048},
	 {13, 0x584828},
	 {14, 0x383828},
	 {15, 0x828B9F},
	 {16, 0x003838},
	 {17, 0x7296B7},
	 {18, 0x303525},
	 {19, 0x788868},
	 {20, 0x803060},
	 {21, 0x873968},
	 {22, 0x6050A8},
	 {23, 0x282848},
	 {24, 0x183018},
	 {25, 0xB09058},
	 {26, 0x191919},
	 {27, 0x601880},
	 {28, 0x202018},
	 {29, 0x304040},
	 {30, 0x688080},
	 {31, 0x818173},
	 {32, 0x29380F},
	 {33, 0x20250A},
	 {34, 0x1C1813},
	 {35, 0xB89B67},
	 {36, 0x4B3E14},
	 {37, 0x3D2B0B},
	 {38, 0x38422F},
	 {39, 0x35720A},
	 {40, 0x78673F},
	 {41, 0x90754B},
	 {42, 0x765A3D},
	 {43, 0x352A3D},
	 {44, 0x4F4A53},
	 {45, 0x1B1222},
	 {46, 0x1B2233},
	 {47, 0x35720A},
	 {48, 0x58680B},
	 {49, 0x78680B},
	 {50, 0x6CAC10},
	 {51, 0x819531},
	 {52, 0x55520A},
	 {53, 0x125841},
	 {54, 0x767676},
	 {55, 0x4D4D4D},
	 {56, 0x2E2E2E},
	 {57, 0xEEEEEE},
	 {58, 0xD1D6E7},
	 {59, 0xD1E7D6},
	 {60, 0xB19A3D},
	 {61, 0xD0C074},
	 {62, 0x3D2B0B},
	 {63, 0x644E1E},
	 {64, 0x654D0B},
	 {65, 0x663300},
	 {66, 0x664411},
	 {67, 0xCBBA76},
	 {68, 0x644E1E},
	 {69, 0x654D0B},
	 {70, 0x663300},
	 {71, 0x030303},
	 {72, 0x557799},
	 {73, 0x995566},
	 {74, 0x557799},
	 {75, 0x0A1122},
	 {76, 0xFE0000},
	 {77, 0xD9BB93},
	 {78, 0x7D7D57},
	 {79, 0x666547},
	 {80, 0x8F8E4D},
	 {81, 0x75743F},
	 {82, 0x9C9B6C},
	 {83, 0x78875E},
	 {84, 0x5F6A4A},
	 {85, 0xC8B9AE},
	 {86, 0x76B8AF},
	 {87, 0x1B6F88},
	 {88, 0x083245},
	 {89, 0x85665F},
	 {90, 0x9B664E},
	 {91, 0x5C5444},
	 {92, 0x38562F},
	 {93, 0x464034},
	 {94, 0x3E6995},
	 {95, 0x4B3E14},
	 {96, 0x5C543C},
	 {97, 0x2F2B1F},
	 {98, 0x276D27},
	 {99, 0x396215},
	 {100, 0x705650},
	 {101, 0x665F47},
	 {102, 0x111E1A},
	 {103, 0x343B4B},
	 {104, 0x212A3E},
	 {105, 0x0A1122},
	 {106, 0x2B3344},
	 {107, 0x273043},
	 {108, 0x958B67},
	 {109, 0x7D7657},
	 {110, 0x666666},
	 {111, 0x333333},
	 {112, 0x2B2E2D},
	 {113, 0x64BB75},
	 {114, 0x33501E},
	 {115, 0x71155C},
	 {116, 0x665F47},
	 {117, 0x752222},
	 {118, 0x75624E},
	 {119, 0x726B4F},
	 {120, 0x603028},
	 {121, 0x300000},
	 {122, 0x312D21},
	 {123, 0xB8B098},
	 {124, 0xA59E89},
	 {125, 0x946B03},
	 {126, 0x474231},
	 {127, 0x312D21},
	 {128, 0x827944},
	 {129, 0x403B2C},
	 {130, 0x312C21},
	 {131, 0x1C1B14},
	 {132, 0x2A3B1B},
	 {133, 0x077156},
	 {134, 0x3A462E},
	 {135, 0x3B3E45},
	 {136, 0x31363A},
	 {137, 0xC08048},
	 {138, 0x000000},
	 {139, 0xA8A098},
	 {140, 0x3C2823},
	 {141, 0xDDA6DD},
	 {142, 0x50A0B8},
	 {143, 0x005868},
	 {144, 0x404040},
	 {145, 0x383838},
	 {146, 0x303030},
	 {147, 0x282828},
	 {148, 0x202020},
	 {149, 0x181818},
	 {150, 0xFFFFFF},
	 {151, 0x7C6861},
	 {152, 0x484746},
	 {153, 0x7B7978},
	 {154, 0x4E2C2A},
	 {155, 0xD9BF93},
	 {156, 0x99A5A5},
	 {157, 0x4D5757},
	 {158, 0xC9CFCF},
	 {159, 0x6F7D7D},
	 {160, 0x4A5253},
	 {161, 0x2D4A53},
	 {162, 0x243C43},
	 {163, 0x19353D},
	 {164, 0x102D36},
	 {165, 0x08242C},
	 {166, 0x30120E},
	 {167, 0x391915},
	 {168, 0x4E2F2C},
	 {169, 0x280505},
	 {170, 0x54534D},
	 {171, 0x716F6A},
	 {172, 0x97958A},
	 {173, 0x908180},
	 {174, 0x443D3C},
	 {175, 0x3E2B21},
	 {176, 0xA37F58},
	 {177, 0x6B5839},
	 {178, 0x534E4A},
	 {179, 0x242433},
	 {180, 0x18192D},
	 {181, 0x121322},
	 {182, 0x090912},
	 {183, 0x4A534E},
	 {184, 0x855648},
	 {185, 0x9E6755},
	 {186, 0x6B4539},
	 {187, 0xA37158},
	 {188, 0x383C39},
	 {189, 0x303030},
	 {190, 0x4C5950},
	 {191, 0x5E7364},
	 {192, 0x617E69},
	 {193, 0x7F9A86},
	 {194, 0x8BA692},
	 {195, 0xAAAAAA},
	 {196, 0x444444},
	 {197, 0x3D2B0B},
	 {198, 0x836A44},
	 {199, 0xA07048},
	 {200, 0x4E3C2A},
	 {201, 0xC0AA86},
	 {202, 0x6F492D},
	 {203, 0x89A1BF},
	 {204, 0x4B658F},
	 {205, 0x253557},
	 {206, 0x7B9FB7},
	 {207, 0x93A5BC},
	 {208, 0x586C8C},
	 {209, 0x333F59},
	 {210, 0x86A2B4},
	 {211, 0x1E1A17},
	 {212, 0x2D2927},
	 {213, 0x383431},
	 {214, 0x48392E},
	 {215, 0xF1F2F3},
	 {216, 0xA28876},
	 {217, 0xE6E6EB},
	 {218, 0x3D3D3D},
	 {219, 0x46463E},
	 {220, 0x46463E},
	 {221, 0x2A2A25},
	 {222, 0xAE9062},
	 {223, 0x48546A},
	 {224, 0x445169},
	 {225, 0x020B2A},
	 {226, 0xF9FAFA},
	 {227, 0x99A5A5},
	 {228, 0x647071},
};


const OverlayColor overlayColors[] = {
	 {0, 0xAAAAAA},
	{1, 0x444444},
	{2, 0x666666},
	{3, 0x888888},
	{4, 0x000000},
	{5, 0x8B5A2B},
	{6, 0x3366CC},
	{7, 0x5B5B5B},
	{8, 0xFFFFF5},
	{9, 0x505050},
	{10, 0x444444},
	{11, 0x000000},
	{12, 0x993333},
	{13, 0x3D2B0B},
	{14, 0x3D2B0B},
	{15, 0x663300},
	{16, 0x663300},
	{17, 0x0000CC},
	{18, 0x000000},
	{19, 0x000000},
	{20, 0x996600},
	{21, 0x6D5B2B},
	{22, 0x6D5B2B},
	{23, 0x000000},
	{24, 0xCBBA76},
	{25, 0x827944},
	{26, 0x000000},
	{27, 0x000000},
	{28, 0x35720A},
	{29, 0xEEEEEE},
	{30, 0x654D0B},
	{31, 0x000000},
	{32, 0xC9DDF7},
	{33, 0x505050},
	{34, 0x000000},
	{35, 0x664411},
	{36, 0x000000},
	{37, 0x557799},
	{38, 0x000000},
	{39, 0x4749A3},
	{40, 0x3F6181},
	{41, 0xFF00FF},
	{42, 0x444444},
	{43, 0x505050},
	{44, 0x000000},
	{45, 0x000000},
	{46, 0x000000},
	{47, 0x282820},
	{48, 0x282820},
	{49, 0x302020},
	{50, 0xFF00FF},
	{51, 0x000000},
	{52, 0xFF00FF},
	{53, 0xFF00FF},
	{54, 0xFF00FF},
	{55, 0x606058},
	{56, 0xFF00FF},
	{57, 0x3D2B0B},
	{58, 0xFF00FF},
	{59, 0x826016},
	{60, 0xFF00FF},
	{61, 0xFF00FF},
	{62, 0x003838},
	{63, 0xFF00FF},
	{64, 0xFF00FF},
	{65, 0x788868},
	{66, 0xFF00FF},
	{67, 0x5C2057},
	{68, 0xFF00FF},
	{69, 0x873968},
	{70, 0xFF00FF},
	{71, 0x660000},
	{72, 0xFF00FF},
	{73, 0x3AB011},
	{74, 0xFF00FF},
	{75, 0xC4AC4E},
	{76, 0xB79767},
	{77, 0x403010},
	{78, 0x97874F},
	{79, 0x7D5B2B},
	{80, 0x504020},
	{81, 0x5C5444},
	{82, 0x464034},
	{83, 0x000000},
	{84, 0x303525},
	{85, 0x2D0000},
	{86, 0x423F73},
	{87, 0x544D37},
	{88, 0x5E461C},
	{89, 0x2E2920},
	{90, 0x504020},
	{91, 0xFF00FF},
	{92, 0x303838},
	{93, 0x494242},
	{94, 0x00C890},
	{95, 0x587070},
	{96, 0x00FF00},
	{97, 0xFF00FF},
	{98, 0x282828},
	{99, 0xFF00FF},
	{100, 0x544217},
	{101, 0x303525},
	{102, 0x501840},
	{103, 0x83C3CA},
	{104, 0x666666},
	{105, 0x66593B},
	{106, 0x3A4B35},
	{107, 0x403010},
	{108, 0xC9DDF9},
	{109, 0x383820},
	{110, 0xFF00FF},
	{111, 0xFF00FF},
	{112, 0xFF00FF},
	{113, 0x403810},
	{114, 0x181810},
	{115, 0x000000},
	{116, 0x4F4F4F},
	{117, 0xD8D8F0},
	{118, 0x5C543C},
	{119, 0x2F2B1F},
	{120, 0xFF00FF},
	{121, 0xFF00FF},
	{122, 0xB8B098},
	{123, 0xFF00FF},
	{124, 0xFF00FF},
	{125, 0xFF00FF},
	{126, 0x404038},
	{127, 0x77A785},
	{128, 0xFF00FF},
	{129, 0x82C4B8},
	{130, 0x272710},
	{131, 0x373229},
	{132, 0x303828},
	{133, 0x404044},
	{134, 0xFF00FF},
	{135, 0xFF00FF},
	{136, 0x746949},
	{137, 0xFF00FF},
	{138, 0x2E2E2E},
	{139, 0x484838},
	{140, 0x688080},
	{141, 0xA0A8A8},
	{142, 0x506060},
	{143, 0xFF00FF},
	{144, 0x818173},
	{145, 0xB0B0A6},
	{146, 0x646459},
	{147, 0xFF00FF},
	{148, 0x738173},
	{149, 0xA6B0A6},
	{150, 0x7296B7},
	{151, 0xFF00FF},
	{152, 0xFF00FF},
	{153, 0xFF00FF},
	{154, 0xFF00FF},
	{155, 0x44886E},
	{156, 0xFAB737},
	{157, 0x4182AF},
	{158, 0x3C2823},
	{159, 0xDDA6DD},
	{160, 0xFF00FF},
	{161, 0x435541},
	{162, 0x6E3E2F},
	{163, 0x505070},
	{164, 0x596459},
	{165, 0xFAFA45},
	{166, 0xA6CAC4},
	{167, 0xCA7BC9},
	{168, 0x84B7C4},
	{169, 0xFF00FF},
	{170, 0x787060},
	{171, 0x786B52},
	{172, 0x786848},
	{173, 0x000000},
	{174, 0x648E90},
	{175, 0x9BBABB},
	{176, 0x4D6E6F},
	{177, 0xFF00FF},
	{178, 0x3B3B34},
	{179, 0x4A4242},
	{180, 0x0B4253},
	{181, 0x32363D},
	{182, 0x1B2233},
	{183, 0x0A1122},
	{184, 0x53442D},
	{185, 0x43341B},
	{186, 0x33230A},
	{187, 0x18192D},
	{188, 0x21223E},
	{189, 0xF99322},
	{190, 0x7D7D57},
	{191, 0x666547},
	{192, 0x8F8E4D},
	{193, 0x431D1B},
	{194, 0x241A19},
	{195, 0x000000},
	{196, 0xECEBE9},
	{197, 0xBFB9B6},
	{198, 0x9C926C},
	{199, 0xFF00FF},
	{200, 0x0A1A22},
	{201, 0xC8B9AE},
	{202, 0xEDCEB8},
	{203, 0x649075},
	{204, 0x6F673E},
	{205, 0x8D8653},
	{206, 0x000000},
	{207, 0xFF00FF},
	{208, 0xFF00FF},
	{209, 0xFF00FF},
	{210, 0x96633D},
	{211, 0xFF00FF},
	{212, 0x805534},
	{213, 0xFF00FF},
	{214, 0xB3986C},
	{215, 0x474231},
	{216, 0xA29976},
	{217, 0xFF00FF},
	{218, 0x312D21},
	{219, 0xFF00FF},
	{220, 0x12110E},
	{221, 0x312C21},
	{222, 0x85665F},
	{223, 0x9B664E},
	{224, 0x705650},
	{225, 0xA98632},
	{226, 0xCAA13C},
	{227, 0x1C1919},
	{228, 0x131111},
	{229, 0x665F47},
	{230, 0xFF00FF},
	{231, 0x343B4B},
	{232, 0x212A3E},
	{233, 0xFF00FF},
	{234, 0x0A1122},
	{235, 0x293143},
	{236, 0x293246},
	{237, 0x958B67},
	{238, 0x7D7657},
	{239, 0x665F47},
	{240, 0x75624E},
	{241, 0x726B4F},
	{242, 0x2A3B1B},
	{243, 0x077156},
	{244, 0x3A462E},
	{245, 0x264541},
	{246, 0xE1D8D6},
	{247, 0x8C7973},
	{248, 0x5C5250},
	{249, 0xF5EEEC},
	{250, 0x4A5D8A},
	{251, 0x4E2C2A},
	{252, 0x1C1B14},
	{253, 0xC0C8C8},
	{254, 0x4D5E6F},
	{255, 0x6D2B28},
	{256, 0xFF00FF},
	{257, 0x000000},
	{258, 0x000000},
	{259, 0x000000},
	{260, 0x000000},
	{261, 0x646471},
	{262, 0xFDFEFE},
	{263, 0xFFFFFF},
	{264, 0xFF00FF},
	{265, 0x45524E},
	{266, 0xFF00FF},
	{267, 0xFF00FF},
	{268, 0xFF00FF},
	{269, 0x394653},
	{270, 0xCCC5C5},
	{271, 0x3E2B21},
	{272, 0xFF00FF},
	{273, 0x4F3420},
	{274, 0x533D2D},
	{275, 0x573E3D},
	{276, 0xFF00FF},
	{277, 0x332C26},
	{278, 0xFF00FF},
	{279, 0x332926},
	{280, 0xFF00FF},
	{281, 0x654F37},
	{282, 0x4E3D57},
	{283, 0xFF00FF},
	{284, 0x34213E},
	{285, 0x3B2E42},
	{286, 0x48405C},
	{287, 0x242B33},
	{288, 0x2A333D},
	{289, 0x252A25},
	{290, 0x24433C},
	{291, 0x18192D},
	{292, 0x121322},
	{293, 0x090912},
	{294, 0x3D2219},
	{295, 0x25252A},
	{296, 0x534E4A},
	{297, 0x2A2B3D},
	{298, 0x957267},
	{299, 0x6C6760},
	{300, 0xFF00FF},
	{301, 0x4F534A},
	{302, 0x654D0B},
	{303, 0x202828},
	{304, 0xFF00FF},
	{305, 0x000000},
	{306, 0xFF00FF},
	{307, 0xFF00FF},
	{308, 0x383C39},
	{309, 0xFF00FF},
	{310, 0x807048},
	{311, 0xFF00FF},
	{312, 0xFF00FF},
	{313, 0xFF00FF},
	{314, 0xFF00FF},
	{315, 0xFF00FF},
	{316, 0xFF00FF},
	{317, 0xCBBA76},
	{318, 0xFF00FF},
	{319, 0x212A3E},
	{320, 0x1B2233},
	{321, 0xFF00FF},
	{322, 0x12192C},
	{323, 0x5B3725},
	{324, 0x9C896C},
	{325, 0xB3986C},
	{326, 0x6A554A},
	{327, 0x6A554A},
	{328, 0x6A554A},
	{329, 0x6F492D},
	{330, 0x72080F},
	{331, 0x69512B},
	{332, 0x26347C},
	{333, 0xF98500},
	{334, 0x4A2D0B},
	{335, 0x8A9F36},
	{336, 0xFF00FF},
	{337, 0x373229},
	{338, 0x373229},
	{339, 0xA28876},
	{340, 0x8C877C},
	{341, 0x645F59},
	{342, 0xFF00FF},
	{343, 0xFF00FF},
	{344, 0xFF00FF},
	{345, 0xFF00FF},
	{346, 0x403020},
	{347, 0xFF00FF},
	{348, 0x57554D},
	{349, 0xFF00FF},
	{350, 0x796A54},
	{351, 0xFF00FF},
	{352, 0x847F75},
	{353, 0xFF00FF},
	{354, 0x383838},
	{355, 0xFF00FF},
	{356, 0x3C2412},
	{357, 0xFF00FF},
	{358, 0xFF00FF},
	{359, 0xFF00FF},
	{360, 0xFF00FF},
	{361, 0xFF00FF},
	{362, 0xFF00FF},
	{363, 0x07C052},
	{364, 0x0D7135},
	{365, 0x0A5B2B},
	{366, 0x666547},
	{367, 0x616043},
	{368, 0x535239},
	{369, 0x4B4B34},
	{370, 0x53534A},
	{371, 0x6C6C60},
	{372, 0x7E3B25},
	{373, 0x90432B},
	{374, 0x3D342A},
	{375, 0x332C24},
	{376, 0x74602F},
	{377, 0x253140},
	{378, 0x99A5A5},
	{379, 0x0741C0},
	{380, 0x040B19},
	{381, 0x5876A3},
	{382, 0xC5CBCC},
	{383, 0x92A3BB},
	{384, 0x8E9FB7},
	{385, 0x8899AF},
	{386, 0x8292A7},
	{387, 0x78869A},
	{388, 0x6B788B},
	{389, 0x5B6679},
	{390, 0x495262},
	{391, 0x3A404C},
	{392, 0x292E37},
	{393, 0x463D57},
	{394, 0x5E4885},
	{395, 0x4B396B},
	{396, 0x9C896C},
	{397, 0xA29176},
	{398, 0x8F754D},
	{399, 0x997E53},
	{400, 0xCFD5D6},
	{401, 0xB9BEBF},
	{402, 0xFF00FF},
	{403, 0xFF00FF},
	{404, 0xFF00FF},
	{405, 0xFF00FF},
	{406, 0x422402},
	{407, 0xA0CBCE},
	{408, 0xAAD1D3},
	{409, 0xD0DEDF},
	{410, 0x856748},
	{411, 0x000000},
	{412, 0x8C683C},
	{413, 0xFF00FF},
	{414, 0x6B481F},
	{415, 0xFF00FF},
	{416, 0x5C74AB},
	{417, 0x586FA3},
	{418, 0x536899},
	{419, 0x4A5D8A},
	{420, 0x485A85},
	{421, 0x678BB0},
	{422, 0x6287AE},
	{423, 0x5C83AB},
	{424, 0x587DA3},
	{425, 0x587DA3},
	{426, 0x5C8AAB},
	{427, 0x5884A3},
	{428, 0x55809E},
	{429, 0x537C99},
	{430, 0x4D738F},
	{431, 0x8A7AA5},
	{432, 0x82719F},
	{433, 0x7D6C9C},
	{434, 0x786795},
	{435, 0x746490},
	{436, 0x7A7BA5},
	{437, 0x71729F},
	{438, 0x6C6D9C},
	{439, 0x676895},
	{440, 0x646590},
	{441, 0x71729F},
	{442, 0x6C6D9C},
	{443, 0x676895},
	{444, 0x61628B},
	{445, 0x57587D},
	{446, 0x6384AD},
	{447, 0x587CAE},
	{448, 0x5578A7},
	{449, 0x50729E},
	{450, 0x486891},
	{451, 0x7992C6},
	{452, 0x6E8BC7},
	{453, 0x6A87C2},
	{454, 0x6681BB},
	{455, 0x5E78B1},
	{456, 0x4D95B2},
	{457, 0x448AB2},
	{458, 0x4184AB},
	{459, 0x3D7CA2},
	{460, 0x366F95},
	{461, 0x7A7A89},
	{462, 0x717183},
	{463, 0x616172},
	{464, 0x58586A},
	{465, 0x545465},
	{466, 0x628497},
	{467, 0x557C94},
	{468, 0x51778D},
	{469, 0x4C6F85},
	{470, 0x446377},
	{471, 0x767C8E},
	{472, 0x6C738A},
	{473, 0x676E83},
	{474, 0x61677B},
	{475, 0x575C6E},
};

const int underlayColorsCount = sizeof(underlayColors) / sizeof(UnderlayColor);

glm::vec3 getUnderlayRGB(int id)
{
	for (int i = 0; i < underlayColorsCount; ++i)
	{
		const auto& entry = underlayColors[i];
		if (entry.id == id)
		{
			float r = ((entry.rgb >> 16) & 0xFF) / 255.0f;
			float g = ((entry.rgb >> 8) & 0xFF) / 255.0f;
			float b = (entry.rgb & 0xFF) / 255.0f;
			return { r, g, b };
		}
	}
	return { 0.0f, 0.0f, 0.0f };
}

const int overlayColorsCount = sizeof(overlayColors) / sizeof(OverlayColor);

glm::vec3 getOverlayRGB(int id)
{
	const int overlayCount = sizeof(overlayColors) / sizeof(OverlayColor);

	for (int i = 0; i < overlayCount; ++i)
	{
		const auto& entry = overlayColors[i];
		if (entry.id == id)
		{
			int color = entry.rgb;

			if (entry.textureId != 0)
			{
				color = entry.secondaryRgb;
			}
			float r = ((color >> 16) & 0xFF) / 255.0f;
			float g = ((color >> 8) & 0xFF) / 255.0f;
			float b = (color & 0xFF) / 255.0f;
			return { r, g, b };
		}
	}

	// fallback color
	return { 0.0f, 0.0f, 0.0f };
}

